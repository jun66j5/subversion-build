---
name: Run tests on Ubuntu

on:
  workflow_call:
    inputs:
      targets: {required: true, type: string}
      os: {required: true, type: string}
      subversion: {required: true, type: string}
      dependencies: {required: true, type: string}

env:
  SVNARC: ${{ fromJson(inputs.subversion).archive }}
  SWIG_VER: ${{ fromJson(inputs.dependencies).swig }}
  JUNIT_VER: ${{ fromJson(inputs.dependencies).junit }}

jobs:

  swig-py:
    if: ${{ contains(fromJson(inputs.targets), 'swig-py') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 15

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        python-version: ['3.14-dev', '3.13', '3.12', '3.11', '3.10', '3.9', '3.8', '3.7', '3.6', '3.5', '2.7']
        swig-py3:
          - ${{ fromJson(inputs.dependencies).swig >= '3.' }}
        swig-py2:
          - ${{ fromJson(inputs.dependencies).swig < '4.' }}
        exclude:
          - {os: ubuntu-24.04, python-version: '3.7'}
          - {os: ubuntu-24.04, python-version: '3.6'}
          - {os: ubuntu-24.04, python-version: '3.5'}
          - {os: ubuntu-24.04, python-version: '2.7'}
          - {os: ubuntu-22.04, python-version: '3.6'}
          - {os: ubuntu-22.04, python-version: '3.5'}
          - {swig-py3: false, python-version: '3.14-dev'}
          - {swig-py3: false, python-version: '3.13'}
          - {swig-py3: false, python-version: '3.12'}
          - {swig-py3: false, python-version: '3.11'}
          - {swig-py3: false, python-version: '3.10'}
          - {swig-py3: false, python-version: '3.9'}
          - {swig-py3: false, python-version: '3.8'}
          - {swig-py3: false, python-version: '3.7'}
          - {swig-py3: false, python-version: '3.6'}
          - {swig-py3: false, python-version: '3.5'}
          - {swig-py2: false, python-version: '2.7'}

    name: "swig-py (${{ matrix.os }}, ${{ matrix.python-version }})"

    env:
      MATRIX_OS: ${{ matrix.os }}
      MATRIX_PYVER: ${{ matrix.python-version }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ !startsWith(matrix.python-version, '2.') }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Checkout py3c
      uses: actions/checkout@v4
      with:
        repository: encukou/py3c
        ref: ${{ fromJson(inputs.dependencies).py3c }}
        path: py3c

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - run: ./build.sh swig-py


  swig-rb:
    if: ${{ contains(fromJson(inputs.targets), 'swig-rb') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 30

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        ruby-version: [
          '3.4', '3.3', '3.2', '3.1', '3.0',
          '2.7', '2.6', '2.5', '2.4', '2.3', '2.2', '2.1', '2.0', '1.9',
        ]
        exclude:
          - {os: ubuntu-24.04, ruby-version: '1.9'}

    env:
      MATRIX_OS: ${{ matrix.os }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler: 'none'

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - run: ./build.sh swig-rb


  swig-pl:
    if: ${{ contains(fromJson(inputs.targets), 'swig-pl') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 15

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        perl-version: ['5.40', '5.38', '5.36', '5.34', '5.32', '5.30', '5.28', '5.26', '5.24', '5.22']

    env:
      MATRIX_OS: ${{ matrix.os }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Perl ${{ matrix.perl-version }}
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl-version }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - run: ./build.sh swig-pl


  javahl:
    if: ${{ contains(fromJson(inputs.targets), 'javahl') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 15

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        java-version: ['21', '17', '16', '11', '8']

    env:
      MATRIX_OS: ${{ matrix.os }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: ${{ matrix.java-version }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - name: Cache junit jar file
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-junit-${{ fromJson(inputs.dependencies).junit }}

    - run: ./build.sh javahl


  core:
    if: ${{ contains(fromJson(inputs.targets), 'core') }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}

    env:
      MATRIX_OS: ${{ matrix.os }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - run: ./build.sh all

    - name: Upload log files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: log-core-${{ matrix.os }}
        path: 'subversion/*.log'


  prepare:
    if: ${{ contains(fromJson(inputs.targets), 'swig-py') ||
            contains(fromJson(inputs.targets), 'swig-pl') ||
            contains(fromJson(inputs.targets), 'swig-rb') ||
            contains(fromJson(inputs.targets), 'javahl') }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}

    env:
      MATRIX_OS: ${{ matrix.os }}

    steps:
    - name: Cache libraries
      uses: actions/cache@v4
      with:
        path: ~/svn
        key: ${{ matrix.os }}--svn-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion
        ssh-key: ${{ secrets.SSH_IDENTITY_FILE }}

    - name: Cache Subversion archives
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-svn-${{ fromJson(inputs.subversion).archive }}

    - name: Cache SWIG archives
      if: ${{ contains(fromJson(inputs.targets), 'swig-py') ||
              contains(fromJson(inputs.targets), 'swig-pl') ||
              contains(fromJson(inputs.targets), 'swig-rb') }}
      uses: actions/cache@v4
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc-swig-${{ fromJson(inputs.dependencies).swig }}

    - run: ./build.sh install
