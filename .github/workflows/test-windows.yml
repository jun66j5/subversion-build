---
name: Run tests on Windows

on:
  workflow_call:
    inputs:
      targets: {required: true, type: string}
      os: {required: true, type: string}
      subversion: {required: true, type: string}
      dependencies: {required: true, type: string}

env:
  INPUT_SVNARC: ${{ fromJson(inputs.subversion).archive }}

jobs:

  core:
    if: ${{ contains(fromJson(inputs.targets), 'core') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}

    defaults:
      run:
        shell: pwsh

    steps:
    - name: Use LF for git checkout
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion

    - name: Set up archives cache
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v3
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc--${{ fromJson(inputs.subversion).archive }}

    - name: Set up vcpkg cache
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Local\vcpkg\archives
          ~\AppData\Local\vcpkg\downloads\7z*
        key: ${{ matrix.os }}--vcpkg-${{ hashFiles('vcpkg.txt') }}-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up dependencies cache
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\deps
        key: ${{ matrix.os }}--deps-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1

    - run: .\build.ps1 core

    - name: Upload log files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: log-${{ matrix.os }}-core
        path: |
          subversion\*.log
          subversion\Release\*.log


  bindings:
    if: ${{ contains(fromJson(inputs.targets), 'swig-py') ||
            contains(fromJson(inputs.targets), 'swig-pl') ||
            contains(fromJson(inputs.targets), 'javahl') }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        python-version: ['3.x']
        perl-version: ['5']
        java-version: ['21']

    defaults:
      run:
        shell: pwsh

    steps:
    - name: Use LF for git checkout
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion

    - name: Set up archives cache
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v3
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc--${{ fromJson(inputs.subversion).archive }}

    - name: Set up vcpkg cache
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Local\vcpkg\archives
          ~\AppData\Local\vcpkg\downloads\7z*
        key: ${{ matrix.os }}--vcpkg-${{ hashFiles('vcpkg.txt') }}-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up dependencies cache
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\deps
        key: ${{ matrix.os }}--deps-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ contains(fromJson(inputs.targets), 'swig-py') }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Perl ${{ matrix.perl-version }}
      if: ${{ contains(fromJson(inputs.targets), 'swig-pl') }}
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl-version }}

    - name: Set up Java ${{ matrix.java-version }}
      if: ${{ contains(fromJson(inputs.targets), 'javahl') }}
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: ${{ matrix.java-version }}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Checkout py3c
      uses: actions/checkout@v4
      with:
        repository: encukou/py3c
        ref: ${{ fromJson(inputs.dependencies).py3c }}
        path: py3c

    - run: .\build.ps1 bindings
      env:
        INPUT_TARGETS: ${{ join(fromJson(inputs.targets), ' ') }}

    - name: Upload log files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: log-${{ matrix.os }}-bindings
        path: |
          subversion\*.log


  prepare:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      matrix:
        os: ${{ fromJson(inputs.os) }}

    defaults:
      run:
        shell: pwsh

    steps:
    - name: Use LF for git checkout
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout subversion
      if: ${{ fromJson(inputs.subversion).repository }}
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(inputs.subversion).repository }}
        ref: ${{ fromJson(inputs.subversion).ref }}
        path: subversion

    - name: Set up archives cache
      if: ${{ fromJson(inputs.subversion).archive }}
      uses: actions/cache@v3
      with:
        path: arc
        fail-on-cache-miss: true
        enableCrossOsArchive: true
        key: arc--${{ fromJson(inputs.subversion).archive }}

    - name: Set up vcpkg cache
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Local\vcpkg\archives
          ~\AppData\Local\vcpkg\downloads\7z*
        key: ${{ matrix.os }}--vcpkg-${{ hashFiles('vcpkg.txt') }}-run${{ github.run_number }}.${{ github.run_attempt }}
        restore-keys: |
          ${{ matrix.os }}--vcpkg-${{ hashFiles('vcpkg.txt') }}-run${{ github.run_number }}.${{ github.run_attempt }}
          ${{ matrix.os }}--vcpkg-${{ hashFiles('vcpkg.txt') }}-

    - name: Set up dependencies cache
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\deps
        key: ${{ matrix.os }}--deps-run${{ github.run_number }}.${{ github.run_attempt }}

    - name: Set up Python 3
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Checkout apr
      uses: actions/checkout@v4
      with:
        repository: apache/apr
        ref: ${{ fromJson(inputs.dependencies).apr }}
        path: deps/apr

    - name: Checkout apr-util
      uses: actions/checkout@v4
      with:
        repository: apache/apr-util
        ref: ${{ fromJson(inputs.dependencies).apr-util }}
        path: deps/apr-util

    - name: Checkout httpd
      uses: actions/checkout@v4
      with:
        repository: apache/httpd
        ref: ${{ fromJson(inputs.dependencies).httpd }}
        path: deps/httpd

    - name: Checkout serf
      uses: actions/checkout@v4
      with:
        repository: apache/serf
        ref: ${{ fromJson(inputs.dependencies).serf }}
        path: deps/serf

    - run: .\build.ps1 prepare

    - name: Upload log files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: log-${{ matrix.os }}-prepare-deps
        path: |
          deps\**\*.log

    - name: Upload vcpkg log files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: log-${{ matrix.os }}-prepare-vcpkg
        path: |
          C:\vcpkg\buildtrees\**\*.log
